generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int @id @default(autoincrement())
  name      String
  username  String @unique
  password  String
  isActive  Boolean @default(true) @map("is_active")
  isOwner Boolean @default(false) @map("is_owner")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
}

model room {
  id        Int @id @default(autoincrement())
  name      String @unique
  capacity  Int
  schedules  schedule[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")

  roomResources RoomResource[]
}

model teacher {
  id        Int       @id @default(autoincrement())
  name      String
  subject   String
  contact   String
  schedules schedule[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
}

model resource {
  id        Int @id @default(autoincrement())
  name      String @unique
  type      ResourceType
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  roomResources RoomResource[]
}

model schedule {
  id          Int         @id @default(autoincrement())
  roomId      Int @map("room_id")
  teacherId  Int  @map("teacher_id")
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  shift       shift
  weekday     Int[]
  room        room       @relation(fields: [roomId], references: [id], onDelete: Cascade)
  teacher     teacher    @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")

}

model RoomResource {
  id          Int    @id @default(autoincrement()) @map("id")
  roomId      Int @map("room_id")
  resourceId  Int  @map("resource_id")
  value       String
  room       room @relation(fields: [roomId], references: [id])
  resource   resource @relation(fields: [resourceId], references: [id])

  @@unique([roomId, resourceId])
  @@map("room_resource")
}

enum shift {
  MORNING
  AFTERNOON
  NIGHT
}

enum ResourceType {
  QUANTITY
  AVAILABILITY

  @@map("resource_type")
}
